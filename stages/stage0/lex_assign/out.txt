/* A lexical scanner generated by flex */
/* First, we deal with  platform-specific or compiler-specific issues. */
/* begin standard C headers. */
/* end standard C headers. */
/* flex integer type definitions */
/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
/* Limits of integral types. */
/* ! C99 */
/* ! FLEXINT_H */
/* begin standard C++ headers. */
/* TODO: this is always defined, so inline it */
/* Returned upon end-of-file. */
/* Action number for EOF rule of a given start state. */
/* Special action meaning "start processing a new file". */
/* Size of default input buffer. */
/* __ia64__ */
/* Return all but the first "n" matched characters back to the input stream. */
/* Undo effects of setting up yytext. */
/* set up yytext again */
/* input buffer */
/* current position in input buffer */
/**< The line count. */
/**< The column count. */
/* !YY_STRUCT_YY_BUFFER_STATE */
/* Stack of input buffers. */
/**< index of top of stack. */
/**< capacity of stack. */
/**< Stack as an array. */
/* yy_hold_char holds the character lost when yytext is formed. */
/* number of characters read into yy_ch_buf */
/* Points to current character in buffer. */
/* whether we need to initialize */
/* start state number */
/* Begin user sect3 */
/* Declarations */
/* regular Definations */
/* Rules */
/* Amount of stuff to slurp up with each read. */
/* On IA-64, the buffer size is 16k, not 8k */
/* __ia64__ */
/* Copy whatever the last rule matched to the standard output. */
/* Number of entries by which start-condition stack grows. */
/* Report a fatal error. */
/* end tables serialization structures and prototypes */
/* !YY_DECL */
/* Code executed at the end of each rule. */
/*LINTED*/
/* first start state */
/*CONSTCOND*/1 )		/* loops until end-of-file is reached */
/* Support of yytext. */
/* have to back up */
/* This label is used only to access EOF actions. */
/* beginning of action switch */
/* must back up */
/* undo the effects of YY_DO_BEFORE_ACTION */
/* rule 1 can match eol */
/* undo effects of setting up yytext */
/* set up yytext again */
/* Amount of text matched not including the EOB char. */
/* Undo the effects of YY_DO_BEFORE_ACTION. */
/* This was really a NUL. */
/* Consume the NUL. */
/* end of action switch */
/* end of scanning one token */
/* end of user's declarations */
/* end of yylex */
/* Don't try to fill the buffer, so this is an EOF. */
/* Try to read more data. */
/* First move last chars to start of buffer. */
/* Not enough room in the buffer - grow it. */
/* just a shorter name for the current buffer */
/* Include room in for 2 EOB chars. */
/* Can't grow it, we don't own it. */
/* Read in more data. */
/* Extend the array by 50%, plus the number we really need. */
/* "- 2" to take care of EOB's */
/* yy_get_previous_state - get the state just before the EOB char was reached */
/* undo effects of setting up yytext */
/* need to shift things up to make room */
/* +2 for EOB chars. */
/* This was really a NUL. */
/* need more input */
/* Reset buffer status. */
/*FALLTHROUGH*/
/* cast for 8-bit char's */
/* preserve yytext */
/* ifndef YY_NO_INPUT */
/* Flush out information for old buffer. */
/* Not sure if we should pop here. */
/* This block is copied from yy_switch_to_buffer. */
/* Flush out information for old buffer. */
/* Only push if top exists. Otherwise, replace top. */
/* copied from yy_switch_to_buffer. */
/* After all that talk, this was set to 1 anyways... */
/* Increase the buffer to prepare for a possible push. */
/* arbitrary grow size */
/* zero only the new slots.*/
/* They forgot to leave room for the EOB's. */
/* "- 2" to take care of EOB's */
/* Get memory for full buffer, including space for trailing EOB's. */
/* Redefine yyless() so it works in section 3 code. */
/* Undo effects of setting up yytext. */
/* Accessor  methods (get/set functions) to struct members. */
/* Defined in main.c */
/* yylex_destroy is for both reentrant and non-reentrant scanners. */
/* Pop the buffer stack, destroying each element. */
/* Destroy the stack itself. */
/* see yyrealloc() for (char *) cast */
/* Auxilary functions */
